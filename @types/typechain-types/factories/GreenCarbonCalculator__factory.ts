/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GreenCarbonCalculator,
  GreenCarbonCalculatorInterface,
} from "../GreenCarbonCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_TCO2Faucet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_TCO2Token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalOwnerIsOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721ReceiverNotReceived",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCall",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotERC721Receiver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_CO2Emission",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mintNetZeroCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "staticTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c2538038062001c258339810160408190526200003491620001f4565b600762000042838262000392565b50600862000051828262000392565b5050600980546001600160a01b039485166001600160a01b031991821617909155600a8054939094169216919091179091555062000462565b60006001600160a01b0382165b92915050565b620000a8816200008a565b8114620000b457600080fd5b50565b805162000097816200009d565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715620001025762000102620000c4565b6040525050565b60006200011560405190565b9050620001238282620000da565b919050565b60006001600160401b03821115620001445762000144620000c4565b601f19601f83011660200192915050565b60005b838110156200017257818101518382015260200162000158565b50506000910152565b6000620001926200018c8462000128565b62000109565b905082815260208101848484011115620001af57620001af600080fd5b620001bc84828562000155565b509392505050565b600082601f830112620001da57620001da600080fd5b8151620001ec8482602086016200017b565b949350505050565b600080600080608085870312156200020f576200020f600080fd5b60006200021d8787620000b7565b94505060206200023087828801620000b7565b93505060408501516001600160401b03811115620002515762000251600080fd5b6200025f87828801620001c4565b92505060608501516001600160401b03811115620002805762000280600080fd5b6200028e87828801620001c4565b91505092959194509250565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002c557607f821691505b602082108103620002da57620002da6200029a565b50919050565b600062000097620002ee8381565b90565b620002fc83620002e0565b815460001960089490940293841b1916921b91909117905550565b600062000326818484620002f1565b505050565b818110156200034a576200034160008262000317565b6001016200032b565b5050565b601f82111562000326576000818152602090206020601f85010481016020851015620003775750805b6200038b6020601f8601048301826200032b565b5050505050565b81516001600160401b03811115620003ae57620003ae620000c4565b620003ba8254620002b0565b620003c78282856200034e565b6020601f831160018114620003fe5760008415620003e55750858201515b600019600886021c19811660028602178655506200045a565b600085815260208120601f198616915b828110156200043057888501518255602094850194600190920191016200040e565b868310156200044d5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b6117b380620004726000396000f3fe60806040526004361061010d5760003560e01c80636352211e11610095578063b644e24611610064578063b644e246146102fa578063b88d4fde1461031a578063bf1fe72d1461033a578063c87b56dd1461035a578063e985e9c51461037a57600080fd5b80636352211e1461028557806370a08231146102a557806395d89b41146102c5578063a22cb465146102da57600080fd5b806318160ddd116100dc57806318160ddd146101e557806323b872dd1461020357806327e235e3146102235780633ccfd60b1461025057806342842e0e1461026557600080fd5b806301ffc9a71461013e57806306fdde0314610174578063081812fc14610196578063095ea7b3146101c357600080fd5b3661013957336000908152600b602052604081208054349290610131908490610ff3565b925050819055005b600080fd5b34801561014a57600080fd5b5061015e61015936600461102b565b61039a565b60405161016b9190611056565b60405180910390f35b34801561018057600080fd5b506101896103c5565b60405161016b91906110ba565b3480156101a257600080fd5b506101b66101b13660046110dc565b610453565b60405161016b9190611117565b3480156101cf57600080fd5b506101e36101de366004611139565b610497565b005b3480156101f157600080fd5b506000545b60405161016b919061117c565b34801561020f57600080fd5b506101e361021e36600461118a565b610526565b34801561022f57600080fd5b506101f661023e3660046111da565b600b6020526000908152604090205481565b34801561025c57600080fd5b506101e3610537565b34801561027157600080fd5b506101e361028036600461118a565b610601565b34801561029157600080fd5b506101b66102a03660046110dc565b61061c565b3480156102b157600080fd5b506101f66102c03660046111da565b6106dc565b3480156102d157600080fd5b50610189610721565b3480156102e657600080fd5b506101e36102f536600461120e565b61072e565b34801561030657600080fd5b506101896103153660046110dc565b61073d565b34801561032657600080fd5b506101e361033536600461133c565b610803565b34801561034657600080fd5b506101e36103553660046113bb565b61080f565b34801561036657600080fd5b506101896103753660046110dc565b610987565b34801561038657600080fd5b5061015e610395366004611409565b610992565b60006001600160e01b03198216635b5e139f60e01b14806103bf57506103bf826109c0565b92915050565b600780546103d290611452565b80601f01602080910402602001604051908101604052809291908181526020018280546103fe90611452565b801561044b5780601f106104205761010080835404028352916020019161044b565b820191906000526020600020905b81548152906001019060200180831161042e57829003601f168201915b505050505081565b600061045e826109f5565b61047b57604051634a1850bf60e11b815260040160405180910390fd5b506000908152600360205260409020546001600160a01b031690565b60006104a28261061c565b9050806001600160a01b0316836001600160a01b0316036104d65760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821681148015906104f757506104f58282610992565b155b156105155760405163250fdee360e21b815260040160405180910390fd5b610520848484610a0a565b50505050565b61053233848484610a66565b505050565b336000908152600b602052604090205461056c5760405162461bcd60e51b8152600401610563906114c4565b60405180910390fd5b336000818152600b602052604080822054905191929161058b906114d7565b60006040518083038185875af1925050503d80600081146105c8576040519150601f19603f3d011682016040523d82523d6000602084013e6105cd565b606091505b50509050806105ee5760405162461bcd60e51b8152600401610563906114df565b50336000908152600b6020526040812055565b61053283838360405180602001604052806000815250610803565b60008181526001602052604081205482906001600160a01b031615610659576000908152600160205260409020546001600160a01b031692915050565b60008111801561066b57506000548111155b156106c2575b600019810190600003600101156106c2576000818152600160205260409020546001600160a01b0316156106bd576000908152600160205260409020546001600160a01b031692915050565b610671565b50604051634a1850bf60e11b815260040160405180910390fd5b60006001600160a01b038216610705576040516316285dcb60e11b815260040160405180910390fd5b506001600160a01b031660009081526002602052604090205490565b600880546103d290611452565b610739338383610a99565b5050565b6060610748826109f5565b61076557604051634a1850bf60e11b815260040160405180910390fd5b6000828152600560205260409020805461077e90611452565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa90611452565b80156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b50505050509050919050565b61052084848484610b3c565b60005a600954600a5460405163f3fef3a360e01b81529293506001600160a01b039182169263f3fef3a39261084a9216908790600401611511565b600060405180830381600087803b15801561086457600080fd5b505af1158015610878573d6000803e3d6000fd5b5050600a54604051633790cf5760e01b81526001600160a01b039091169250633790cf5791506108ac90869060040161117c565b600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b505050506108ec600680546001019055565b60006108f760065490565b9050610904336001610b89565b61090e8184610ba3565b60005a61091b908461152c565b90506000610929823a61153f565b336000908152600b602052604090205490915081111561095b5760405162461bcd60e51b8152600401610563906115a1565b336000908152600b60205260408120805483929061097a90849061152c565b9091555050505050505050565b60606103bf8261073d565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806103bf57506301ffc9a760e01b6001600160e01b03198316146103bf565b600080821180156103bf575050600054101590565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610a71848285610be1565b610a8e5760405163574b16a760e11b815260040160405180910390fd5b610520838383610c36565b816001600160a01b0316836001600160a01b031603610acb5760405163079f14e360e51b815260040160405180910390fd5b6001600160a01b0383811660008181526004602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b2f908590611056565b60405180910390a3505050565b610b4833858585610a66565b6000836001600160a01b03163b118015610b6b5750610b6984848484610d7e565b155b1561052057604051631f11849560e21b815260040160405180910390fd5b610739828260405180602001604052806000815250610e6a565b610bac826109f5565b610bc957604051634a1850bf60e11b815260040160405180910390fd5b60008281526005602052604090206105328282611649565b6000816001600160a01b0316846001600160a01b03161480610c1c5750836001600160a01b0316610c1184610453565b6001600160a01b0316145b80610c2c5750610c2c8285610992565b90505b9392505050565b6001600160a01b0382161580610c665750610c508161061c565b6001600160a01b0316836001600160a01b031614155b15610c845760405163574b16a760e11b815260040160405180910390fd5b610c9060008285610a0a565b6001600160a01b038083166000818152600260209081526040808320805460019081019091559488168352808320805460001901905585835290849052812080546001600160a01b03191690921790915554908201908111801590610d0a57506000818152600160205260409020546001600160a01b0316155b15610d3757600081815260016020526040902080546001600160a01b0319166001600160a01b0386161790555b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610db390339089908890889060040161170d565b6020604051808303816000875af1925050508015610dee575060408051601f3d908101601f19168201909252610deb9181019061175c565b60015b610e4c573d808015610e1c576040519150601f19603f3d011682016040523d82523d6000602084013e610e21565b606091505b508051600003610e4457604051630568cbab60e01b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6105328383836001821580610e8657506001600160a01b038416155b15610ea45760405163574b16a760e11b815260040160405180910390fd5b60008054610eb3906001610ff3565b905060008054850181556001600160a01b038616808252600260209081526040808420805489019055848452600190915290912080546001600160a01b031916909117905580848101838015610f1357506000876001600160a01b03163b115b15610f90575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610f646000888480600101955088610d7e565b610f8157604051631f11849560e21b815260040160405180910390fd5b808203610f1957505050610520565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808203610f915750505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103bf576103bf610fdd565b6001600160e01b031981165b811461101d57600080fd5b50565b80356103bf81611006565b60006020828403121561104057611040600080fd5b6000610e628484611020565b8015155b82525050565b602081016103bf828461104c565b60005b8381101561107f578181015183820152602001611067565b50506000910152565b6000611092825190565b8084526020840193506110a9818560208601611064565b601f01601f19169290920192915050565b60208082528101610c2f8184611088565b80611012565b80356103bf816110cb565b6000602082840312156110f1576110f1600080fd5b6000610e6284846110d1565b60006001600160a01b0382166103bf565b611050816110fd565b602081016103bf828461110e565b611012816110fd565b80356103bf81611125565b6000806040838503121561114f5761114f600080fd5b600061115b858561112e565b925050602061116c858286016110d1565b9150509250929050565b80611050565b602081016103bf8284611176565b6000806000606084860312156111a2576111a2600080fd5b60006111ae868661112e565b93505060206111bf8682870161112e565b92505060406111d0868287016110d1565b9150509250925092565b6000602082840312156111ef576111ef600080fd5b6000610e62848461112e565b801515611012565b80356103bf816111fb565b6000806040838503121561122457611224600080fd5b6000611230858561112e565b925050602061116c85828601611203565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561127d5761127d611241565b6040525050565b600061128f60405190565b905061129b8282611257565b919050565b600067ffffffffffffffff8211156112ba576112ba611241565b601f19601f83011660200192915050565b82818337506000910152565b60006112ea6112e5846112a0565b611284565b90508281526020810184848401111561130557611305600080fd5b6113108482856112cb565b509392505050565b600082601f83011261132c5761132c600080fd5b8135610e628482602086016112d7565b6000806000806080858703121561135557611355600080fd5b6000611361878761112e565b94505060206113728782880161112e565b9350506040611383878288016110d1565b925050606085013567ffffffffffffffff8111156113a3576113a3600080fd5b6113af87828801611318565b91505092959194509250565b600080604083850312156113d1576113d1600080fd5b60006113dd85856110d1565b925050602083013567ffffffffffffffff8111156113fd576113fd600080fd5b61116c85828601611318565b6000806040838503121561141f5761141f600080fd5b600061142b858561112e565b925050602061116c8582860161112e565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061146657607f821691505b6020821081036114785761147861143c565b50919050565b602681526000602082017f596f7520646f6e277420686176652066756e647320696e207468652063616c638152653ab630ba37b960d11b602082015291505b5060400190565b602080825281016103bf8161147e565b90565b6000816103bf565b602080825281016103bf8160148152732932bb32b93a32b2103a3930b739b0b1ba34b7b760611b602082015260400190565b6040810161151f828561110e565b610c2f6020830184611176565b818103818111156103bf576103bf610fdd565b81810280821583820485141761155757611557610fdd565b5092915050565b602681526000602082017f496e73756666696369656e742062616c616e636520746f20636f7665722067618152651cc818dbdcdd60d21b602082015291506114bd565b602080825281016103bf8161155e565b60006103bf6114d48381565b6115c6836115b1565b815460001960089490940293841b1916921b91909117905550565b60006105328184846115bd565b81811015610739576116016000826115e1565b6001016115ee565b601f821115610532576000818152602090206020601f850104810160208510156116305750805b6116426020601f8601048301826115ee565b5050505050565b815167ffffffffffffffff81111561166357611663611241565b61166d8254611452565b611678828285611609565b6020601f8311600181146116ac57600084156116945750858201515b600019600886021c1981166002860217865550611705565b600085815260208120601f198616915b828110156116dc57888501518255602094850194600190920191016116bc565b868310156116f85784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b6080810161171b828761110e565b611728602083018661110e565b6117356040830185611176565b81810360608301526117478184611088565b9695505050505050565b80516103bf81611006565b60006020828403121561177157611771600080fd5b6000610e62848461175156fea2646970667358221220c78e1c36e61e01f541e52d90796cf7cf1169a44c61373dcbdb5b39ee7924c1a864736f6c63430008130033";

type GreenCarbonCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreenCarbonCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreenCarbonCalculator__factory extends ContractFactory {
  constructor(...args: GreenCarbonCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GreenCarbonCalculator";
  }

  deploy(
    _TCO2Faucet: string,
    _TCO2Token: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GreenCarbonCalculator> {
    return super.deploy(
      _TCO2Faucet,
      _TCO2Token,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<GreenCarbonCalculator>;
  }
  getDeployTransaction(
    _TCO2Faucet: string,
    _TCO2Token: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _TCO2Faucet,
      _TCO2Token,
      _name,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): GreenCarbonCalculator {
    return super.attach(address) as GreenCarbonCalculator;
  }
  connect(signer: Signer): GreenCarbonCalculator__factory {
    return super.connect(signer) as GreenCarbonCalculator__factory;
  }
  static readonly contractName: "GreenCarbonCalculator";
  public readonly contractName: "GreenCarbonCalculator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreenCarbonCalculatorInterface {
    return new utils.Interface(_abi) as GreenCarbonCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GreenCarbonCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GreenCarbonCalculator;
  }
}
